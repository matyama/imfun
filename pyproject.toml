[tool.poetry]
name = "imfun"
version = "0.1.1"
description = "Convert an image to cartoon"
authors = ["Martin Matyášek <martin.matyasek@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/matyama/imfun"
keywords = ["image-processing", "opencv", "for-fun"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Operating System :: Unix",
    "Topic :: Multimedia",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Utilities"
]
include = ["examples/*"]

[tool.poetry.dependencies]
python = "^3.8"
click = "^7.1.2"
numpy = "^1.19.4"
opencv-python = "^4.5.1"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
flake8-black = "*"
flake8-comprehensions = "*"
flake8-isort = "*"
flake8-markdown = "*"
flake8-mutable = "*"
flake8-pytest = "*"
flakehell = "*"
mypy = "*"
pre-commit = "*"
pytest = "*"
pytest-cov = {version = "*", extras = ["toml"]}

[tool.poetry.scripts]
imfun = "imfun.app:main"

[tool.black]
line-length = 79
target-version = ['py38']
skip-string-normalization = 'true'

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "raise AssertionError", "raise NotImplementedError", "if 0:", "if __name__ == .__main__.:"]
ignore_errors = true
skip_covered = true

[tool.flakehell]
exclude = [".ipynb_checkpoints", "**/.ipynb_checkpoints"]
format = "grouped"
max_line_length = 79
show_source = true

[tool.flakehell.plugins]
"flake8-*" = ["+*"]
mccabe = ["+*"]
pycodestyle = ["+*", "-D400"]
pyflakes = ["+*"]
pylint = ["+*"]

[tool.isort]
multi_line_output = 3
line_length = 79
include_trailing_comma = true
skip_glob = [".ipynb_checkpoints", "**/.ipynb_checkpoints"]

[tool.pytest.ini_options]
addopts = "--strict-markers --verbose --doctest-modules --cov=imfun"
testpaths = ["imfun", "tests"]

[build-system]
requires = ["poetry-core>=1.0.0a5"]
build-backend = "poetry.core.masonry.api"
